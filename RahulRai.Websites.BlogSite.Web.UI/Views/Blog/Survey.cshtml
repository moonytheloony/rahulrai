@using RahulRai.Websites.Utilities.Common.Entities
@model IEnumerable<UserInput>
<h1>Ongoing Surveys</h1>
<hr>
@if (Model.Count() > 1)
{
    foreach (var survey in Model)
    {
        <h3>
            <a href="@Url.RouteUrl("Default", new { controller = "Blog", action = "Survey", surveyName = survey.DocumentName })">@survey.SurveyTitle</a>
        </h3>
        <p>@survey.SurveyGuideline</p>
        <a class="btn btn-primary" href="@Url.RouteUrl("Default", new { controller = "Blog", action = "Survey", surveyName = survey.DocumentName })">Fill Survey <span class="glyphicon glyphicon-chevron-right"></span></a>
        <hr />
    }
}
else
{
    using (Html.BeginRouteForm("Default", new { action = "Survey", controller = "Blog" }, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        if (Model.Count() == 1)
        {
            if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
            {
                <div class="alert alert-danger">
                    <a href="#" class="close" data-dismiss="alert">x</a>
                    <h4>There are errors in entries you made</h4>
                    @Html.ValidationSummary()
                    <br />
                    *The human check has been reset. If you were uploading a file, that too has been removed.
                </div>
                <script>
                    $(".validation-summary-errors").removeClass("validation-summary-errors");
                    $(".input-validation-error").removeClass("input-validation-error").parent().addClass("has-error");
                </script>
            }
            if (ViewBag.VoteSubmitted != null && ViewBag.VoteSubmitted == true)
            {
                <div class="alert alert-success">
                    <h4>Thank You!</h4>
                    <h5>Thank you for responding to the survey! You will be redirected to homepage in ten seconds.</h5>
                </div>
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-xs-12 text-center col-center">
                            <div class="item">
                                <h3>0</h3>
                                <svg width="160" height="160" xmlns="http://www.w3.org/2000/svg">
                                    <g>
                                        <title>SVG TIMER</title>
                                        <circle id="circle" class="circle_animation" r="35" cy="80" cx="80" stroke-width="5" stroke="#27A7DF" fill="none" />
                                    </g>
                                </svg>
                            </div>
                        </div>
                    </div>
                </div>
                <script>
                    var time = 10;
                    var initialOffset = '220';
                    var i = 1;
                    var interval = setInterval(function () {
                        $('.circle_animation').css('stroke-dashoffset', initialOffset - (i * (initialOffset / time)));
                        $('h3').text(i);
                        if (i === time) {
                            clearInterval(interval);
                        }
                        i++;
                        i++;
                    }, 1000);
                </script>
                <style>
                    /*Timer CSS*/
                    .item {
                        position: relative;
                    }

                        .item h3 {
                            text-align: center;
                            position: absolute;
                            line-height: 125px;
                            width: 100%;
                        }

                    svg {
                        -webkit-transform: rotate(-90deg);
                        -moz-transform: rotate(-90deg);
                        -ms-transform: rotate(-90deg);
                        -o-transform: rotate(-90deg);
                        transform: rotate(-90deg);
                    }

                    .circle_animation {
                        stroke-dasharray: 220px;
                        stroke-dashoffset: 220;
                        -webkit-transition: all 1s linear;
                        -moz-transition: all 1s linear;
                        -ms-transition: all 1s linear;
                        -o-transition: all 1s linear;
                        transition: all 1s linear;
                    }
                    /*End Timer CSS*/
                </style>
                <meta http-equiv="refresh" content="11;url=@Url.RouteUrl("Default", new { action = "GetLatestBlogs", controller = "Blog" })" />
            }
            else
            {
                <form role="form">
                    @{
                //// Expand the form if there is just one form.
                var form = Model.First();
                //// Human check and store Model in session.
                var random = new Random();
                var variable1 = random.Next(0, 10);
                var variable2 = random.Next(0, 10);
                Session["HumanCheck"] = variable1 + variable2;
                Session["Survey"] = form;
                    }
                    <h2>@form.SurveyTitle</h2>
                    <p>@form.SurveyGuideline</p>
                    <br />
                    <div class="container-fluid">
                        @if (form.UserInputType == UserInputType.VoteSingleOption)
                        {
                            foreach (var option in form.Input)
                            {
                                <div class="row">
                                    <div class="col-sm-10 text-left">
                                        @Html.RadioButton("radiogroup", @option.InputText, false, new { id = @option.InputIdentifier })
                                        <label>@option.InputText</label>
                                    </div>
                                </div>
                                <br />
                            }
                        }

                        @if (form.UserInputType == UserInputType.VoteMultipleOptions)
                        {
                            foreach (var option in form.Input)
                            {
                                <div class="row">
                                    <div class="col-sm-10 text-left">
                                        @Html.CheckBox(@option.InputIdentifier, false)
                                        <label>@option.InputText</label>
                                    </div>
                                </div>
                                <br />
                            }
                        }

                        @if (form.UserInputType == UserInputType.Text)
                        {
                            foreach (var option in form.Input)
                            {
                                <div class="row">
                                    <div class="col-sm-6 text-left">
                                        <label class="control-label">@option.InputText</label>
                                    </div>
                                    <div class="col-sm-4">
                                        <input class="form-control" id="@option.InputIdentifier" maxlength="200" value="@option.Value">
                                    </div>
                                </div>
                                <br />
                            }
                        }

                        @if (form.AcceptAttachment)
                        {
                            <div class="row">
                                <div class="col-sm-6 text-left">
                                    <label>Please upload file</label>
                                </div>
                                <div class="col-sm-4">
                                    @Html.TextBox("attachment", null, new { type = "file", @class = "form-control" })
                                </div>
                            </div>
                        }
                        <br />
                        <div class="row">
                            <div class="col-sm-6 text-left">
                                <label>What is @variable1 + @variable2?</label>
                            </div>
                            <div class="col-sm-4">
                                @Html.TextBox("human", null, new { maxlength = "2", @class = "form-control" })
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-10 text-right">
                                <input type="submit" value="Save My Response" class="btn btn-default btn-info" />
                            </div>
                        </div>
                    </div>
                </form>
            }
        }
    }
}
